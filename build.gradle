plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hycu'
version = 'v1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //HWPX, HWP, HWP2HWPX
    // https://mvnrepository.com/artifact/kr.dogfoot/hwpxlib
    implementation 'kr.dogfoot:hwpxlib:1.0.1'
    // https://mvnrepository.com/artifact/kr.dogfoot/hwplib
    implementation 'kr.dogfoot:hwplib:1.1.4'
    //implementation 'kr.dogfoot:hwplib:1.0'
    implementation files('lib/hwp2hwpx.jar')


//    // 아파치 POI 를 통한 .docx와 .xlsx 파일 처리 -> Tika 하나로 전부 가능
//    implementation 'org.apache.poi:poi-ooxml:5.2.5'
//    implementation 'org.apache.poi:poi:5.2.5'

    // 아파치 티카 의존성 (텍스트 추출 및 파싱)
    implementation 'org.apache.tika:tika-core:2.9.2' // 최신 안정화 버전을 확인하여 사용하세요.
    implementation 'org.apache.tika:tika-parsers-standard-package:2.9.2' // PDF 파서 포함

    // 로깅을 위한 SLF4J (Tika 내부에서 사용됨)
    // Tika가 Logback이나 Log4j와 같은 구체적인 로깅 구현체를 찾지 못하면 경고를 출력할 수 있습니다.
    // 필요하다면 아래 중 하나를 추가하세요. (slf4j-simple은 간단한 콘솔 출력)
//    implementation 'org.slf4j:slf4j-simple:2.0.13' // Tika 2.x는 SLF4J 2.x와 호환됩니다.

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' // provided로 변경

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

//bootJar {
//    archiveFileName="Police-engine.jar" // 생성될 JAR 파일 이름 지정
//    manifest {
//        attributes 'build-time': new Date().format('yyyy-MM-dd HH:mm:ss') // JAR 매니페스트에 빌드 시간 기록
//
//    }
//}

bootJar {
    enabled = false // fat jar 비활성화
}
war {
    archiveFileName="Police-engine.war"
    enabled = true // war 활성화
}
